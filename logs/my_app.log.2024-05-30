[2m2024-05-30T13:05:37.755487Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m (engine-id: 0) Engine::with_parameter_data elapsed time: 190.5522ms

[2m2024-05-30T13:05:37.755937Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.756119Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.756302Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.756702Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m quantlib\src\pricing_engines\engine.rs:1788
(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 
<TAG>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

[2m2024-05-30T13:05:37.757097Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-05-30T13:05:37.757302Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.757594Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.757898Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.758065Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:05:37.772066Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-05-30T13:05:37.797697Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.04s)
[2m2024-05-30T13:05:37.811677Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.06s)
[2m2024-05-30T13:05:37.830647Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-05-30T13:05:37.837775Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mexamples_toymodel[0m[2m:[0m Application finished 305.114ms
[2m2024-05-30T13:06:52.805198Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m (engine-id: 0) Engine::with_parameter_data elapsed time: 185.1124ms

[2m2024-05-30T13:06:52.805651Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.805859Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.806054Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.806593Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m quantlib\src\pricing_engines\engine.rs:1788
(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 
<TAG>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

[2m2024-05-30T13:06:52.807131Z[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-05-30T13:06:52.807353Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.807726Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.808108Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.808302Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:06:52.822165Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-05-30T13:06:52.844453Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-05-30T13:06:52.857653Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.05s)
[2m2024-05-30T13:06:52.875837Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-05-30T13:06:52.882554Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mexamples_toymodel[0m[2m:[0m Application finished 295.4895ms
[2m2024-05-30T13:15:22.092021Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 183.3176ms

[2m2024-05-30T13:15:22.092429Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.092613Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.092806Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.093663Z[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1798
<TAG>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

                    (Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-05-30T13:15:22.093922Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.094281Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.094647Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.094834Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:15:22.108638Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-05-30T13:15:22.131496Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-05-30T13:15:22.145197Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.05s)
[2m2024-05-30T13:15:22.163394Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-05-30T13:15:22.170412Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mexamples_toymodel[0m[2m:[0m Application finished 294.0397ms
[2m2024-05-30T13:16:50.133288Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 186.2321ms

[2m2024-05-30T13:16:50.133721Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.133926Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.134134Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.135041Z[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1798
<TAG>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-05-30T13:16:50.135288Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.135639Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.136002Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.136193Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-05-30T13:16:50.151120Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-05-30T13:16:50.175005Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-05-30T13:16:50.187979Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.05s)
[2m2024-05-30T13:16:50.205999Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-05-30T13:16:50.213026Z[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mexamples_toymodel[0m[2m:[0m Application finished 298.0883ms

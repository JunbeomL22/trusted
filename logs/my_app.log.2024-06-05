[2m2024-06-05T09:16:20.3637756+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 224.7197ms

[2m2024-06-05T09:16:20.364606+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3649695+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3652737+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3660918+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1799
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T09:16:20.3664524+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3668312+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.367226+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3675484+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:16:20.3819367+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T09:16:20.4102002+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T09:16:20.4270599+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.06s)
[2m2024-06-05T09:16:20.4471313+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T09:16:20.4807795+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 376.6906ms
[2m2024-06-05T09:33:06.8613328+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 214.9873ms

[2m2024-06-05T09:33:06.8622264+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:33:06.8626864+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:33:06.8638393+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T09:33:06.8644405+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T09:33:06.8962861+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 292.197ms
[2m2024-06-05T10:00:14.4404798+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 209.1942ms

[2m2024-06-05T10:00:14.4410368+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:00:14.4413526+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:00:14.4421032+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:00:14.442474+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:00:14.4427347+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 247.5657ms
[2m2024-06-05T10:19:46.8524815+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 200.5752ms

[2m2024-06-05T10:19:46.8533607+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:19:46.8540971+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:19:46.855257+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:19:47.0467626+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.19s whole time elapsed: 0.19s)
[2m2024-06-05T10:19:47.0470232+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 438.9376ms
[2m2024-06-05T10:20:50.8176213+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 255.6951ms

[2m2024-06-05T10:20:50.8185073+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:20:50.8189331+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:20:50.8205316+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1808
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:20:50.82113+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:20:50.8215627+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 301.9744ms
[2m2024-06-05T10:22:04.9986907+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 215.2094ms

[2m2024-06-05T10:22:04.9992639+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:22:04.9996842+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:22:05.0008346+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:22:05.0049954+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T10:22:05.0053583+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 264.2575ms
[2m2024-06-05T10:22:52.0054324+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 232.2877ms

[2m2024-06-05T10:22:52.0061384+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:22:52.0064844+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:22:52.00732+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1808
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:22:52.0083912+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:22:52.0086656+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 267.7694ms
[2m2024-06-05T10:25:00.1472077+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 256.0078ms

[2m2024-06-05T10:25:00.1478894+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:25:00.1482897+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:25:00.1491131+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1808
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:25:00.1536425+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T10:25:00.153958+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 295.871ms
[2m2024-06-05T10:26:50.7860819+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 220.0639ms

[2m2024-06-05T10:26:50.7867403+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:26:50.7871671+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:26:50.7913693+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:26:50.7917409+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 258.3017ms
[2m2024-06-05T10:27:21.0379258+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 195.3117ms

[2m2024-06-05T10:27:21.0387396+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:27:21.0392207+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:27:21.0404216+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1808
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21: 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21: 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:27:21.0461682+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T10:27:21.0474607+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 250.55ms
[2m2024-06-05T10:29:52.9778646+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 214.7596ms

[2m2024-06-05T10:29:52.9787253+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:29:52.9791499+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:29:52.9807979+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-09-29 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00
KOSPI2 Call Sep21 (165XXX3): 2024-09-13 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:29:52.9868217+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T10:29:52.987186+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 276.3255ms
[2m2024-06-05T10:35:35.0885055+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 198.9346ms

[2m2024-06-05T10:35:35.0893244+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:35:35.089772+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:35:35.0937908+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:35:35.0941493+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 240.7605ms
[2m2024-06-05T10:35:49.5536506+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 226.0988ms

[2m2024-06-05T10:35:49.5545152+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:35:49.5549136+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:35:49.5561137+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1809
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:35:49.5566909+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m KOSPI2 (KOSPI2) deducted from dividens by 0.99142855 (2024-03-13 16:30:00.0 +09:00:00 -> 2024-06-14 0:00:00.0 +09:00:00)
[2m2024-06-05T10:35:49.5614501+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T10:35:49.5618367+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 277.3352ms
[2m2024-06-05T10:43:12.5348979+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 234.7723ms

[2m2024-06-05T10:43:12.5356186+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:43:12.5360492+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T10:43:12.5407132+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1812
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T10:43:12.5411297+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571446 (2024-03-13 16:30:00.0 +09:00:00 -> 2024-06-14 0:00:00.0 +09:00:00)
[2m2024-06-05T10:43:12.5447492+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T10:43:12.545+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 288.1293ms
[2m2024-06-05T11:01:12.7134881+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 237.1607ms

[2m2024-06-05T11:01:12.7143322+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:01:12.7147597+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:01:12.7202216+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1812
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:01:12.7206796+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:01:12.7252409+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:01:12.7256637+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 294.0329ms
[2m2024-06-05T11:01:44.6917386+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m[1mEngine::with_parameter_data
[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
(engine-id: 0) Engine::with_parameter_data elapsed time: 190.8859ms

[2m2024-06-05T11:01:44.692657+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:01:44.693106+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:01:44.698734+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1812
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:01:44.6995581+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:01:44.7057845+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:01:44.7062125+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 250.8645ms
[2m2024-06-05T11:05:33.9058038+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:05:33.9066613+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:05:33.9070302+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:05:33.9112748+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1804
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:05:33.9121007+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:05:33.918387+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:05:33.918697+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 277.9247ms
[2m2024-06-05T11:08:41.1538121+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:08:41.1545979+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:08:41.1551271+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:08:41.1609716+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1804
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:08:41.1617826+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:08:41.1659939+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:08:41.1662997+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 248.7001ms
[2m2024-06-05T11:10:23.919305+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:10:23.920159+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:10:23.920599+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:10:23.9269128+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1804
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:10:23.927357+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9277814+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2025-01-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9296941+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9301226+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2025-01-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9306075+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9310358+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2025-01-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9361563+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9365841+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2025-01-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:10:23.9369934+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T11:10:23.9381685+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 264.141ms
[2m2024-06-05T11:11:51.1532918+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:11:51.1540905+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:11:51.1545151+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:11:51.1599739+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1804
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:11:51.1604364+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:11:51.1616518+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:11:51.1665684+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:11:51.1670038+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:11:51.1673787+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 312.6793ms
[2m2024-06-05T11:12:45.1657663+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:12:45.166308+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:12:45.1666281+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:12:45.1700207+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:12:45.1728037+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:12:45.1731069+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:12:45.173487+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 301.7408ms
[2m2024-06-05T11:13:27.2586002+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:13:27.2593738+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:13:27.2597929+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:13:27.268913+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:13:27.2692924+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 265.5609ms
[2m2024-06-05T11:34:06.4547556+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:34:06.4553546+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:34:06.4556952+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:34:06.4639924+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:34:06.4652185+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 265.5531ms
[2m2024-06-05T11:35:57.080799+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:35:57.0816268+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:35:57.0823632+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:35:57.0893109+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:35:57.0895929+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 290.3063ms
[2m2024-06-05T11:36:17.6408668+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:36:17.6416722+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:36:17.6425736+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:36:17.6485615+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1808
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:36:17.6491098+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:36:17.6512508+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:36:17.655397+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:36:17.6557889+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:36:17.6561562+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 290.8719ms
[2m2024-06-05T11:37:26.2256075+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:37:26.2263589+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:37:26.2274147+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:37:26.2325933+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:37:26.2365864+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:37:26.2369146+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:37:26.2371868+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 277.5656ms
[2m2024-06-05T11:37:55.7751258+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:37:55.7759015+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:37:55.776333+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:37:55.7848156+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:37:55.7852142+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 299.2232ms
[2m2024-06-05T11:38:46.9921988+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:38:46.992711+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:38:46.9930289+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:38:46.9975795+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:38:47.0024278+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:38:47.002746+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:38:47.0030639+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 254.2019ms
[2m2024-06-05T11:39:02.204287+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:39:02.2050588+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:39:02.2054893+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:39:02.2109051+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1814
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:39:02.2114117+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:39:02.2125659+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:39:02.2185629+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00
[2m2024-06-05T11:39:02.21896+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:39:02.2195326+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 304.9345ms
[2m2024-06-05T11:39:46.3432427+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:39:46.3439339+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:39:46.3442064+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:39:46.3476541+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1814
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:39:46.3479745+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) deducted from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:39:46.3488358+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:39:46.3509362+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction rolled back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:39:46.3512194+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:39:46.3514668+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 301.5399ms
[2m2024-06-05T11:40:17.9039869+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:40:17.904711+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:40:17.9051075+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:40:17.9107104+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1814
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:40:17.9111769+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:17.9148025+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:17.9183478+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:17.9187639+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:40:17.9190809+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 230.8473ms
[2m2024-06-05T11:40:40.1545457+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:40:40.1551919+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:40:40.1555171+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:40:40.1599354+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1814
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:40:40.1602986+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:40.1611853+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:40.1645609+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:40:40.1648864+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:40:40.1652028+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 259.4744ms
[2m2024-06-05T11:42:29.8284518+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:42:29.8292268+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:42:29.8296727+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:42:29.8354046+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1813
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:42:29.8361311+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:42:29.8366727+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:42:29.8375058+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:42:29.8388182+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.01s)
[2m2024-06-05T11:42:29.8391817+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 272.5434ms
[2m2024-06-05T11:43:55.2545997+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:43:55.2552785+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:43:55.2557269+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:43:55.2570628+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:43:55.2575886+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:43:55.2583638+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:43:55.2590152+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
# KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:43:55.2594789+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:43:55.2599768+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:43:55.260354+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 264.1065ms
[2m2024-06-05T11:44:49.6348019+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:44:49.6353942+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:44:49.6358218+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:44:49.6369698+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:44:49.6374512+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:44:49.6379316+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:44:49.6384234+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:44:49.639014+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:44:49.6395634+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:44:49.6399253+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 260.5964ms
[2m2024-06-05T11:46:15.7533724+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:46:15.7543441+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:46:15.7550287+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:46:15.7560113+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:46:15.7565529+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:15.7572289+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:15.7579745+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:46:15.7586745+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:15.759127+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T11:46:15.7596782+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 271.2697ms
[2m2024-06-05T11:46:27.2819804+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:46:27.2825406+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:46:27.2828858+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:46:27.2839325+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:46:27.2843519+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:27.2847855+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:27.2852292+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:46:27.2856254+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:46:27.286018+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:46:27.2865976+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 224.6882ms
[2m2024-06-05T11:47:18.8904443+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:47:18.8911496+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:18.8914799+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:18.8923071+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:47:18.8926911+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:18.893053+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:18.8935391+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:47:18.8939398+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:18.8942872+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:18.8945938+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 259.3133ms
[2m2024-06-05T11:47:51.6823498+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:47:51.6829928+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:51.6834712+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:51.6846816+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:47:51.6851928+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:51.6856879+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:51.6863556+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:47:51.6869143+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:47:51.6873676+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:47:51.6877748+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 299.6081ms
[2m2024-06-05T11:48:38.7179361+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:48:38.7186074+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:48:38.71934+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:48:38.7203912+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:48:38.7208257+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:48:38.7212862+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:48:38.7218673+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:48:38.7222378+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:48:38.7226118+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:48:38.7229034+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 287.5976ms
[2m2024-06-05T11:49:39.4309777+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:49:39.4315698+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:49:39.4319905+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:49:39.4330631+09:00[0m [33m WARN[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:49:39.433543+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:49:39.4340142+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:49:39.434648+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:49:39.4354158+09:00[0m [34mDEBUG[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:49:39.4358963+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:49:39.4362799+09:00[0m [32m INFO[0m [1mmain (toymodel)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 258.1372ms
[2m2024-06-05T11:50:27.4452048+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:50:27.4461253+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:50:27.4466162+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:50:27.4478552+09:00[0m [33m WARN[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:50:27.4483558+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:50:27.4488723+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:50:27.449371+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:50:27.4498612+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T11:50:27.4503321+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:50:27.4507483+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 283.9897ms
[2m2024-06-05T11:56:56.5956639+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T11:56:56.5967836+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:56:56.5975363+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:56:56.5983278+09:00[0m [33m WARN[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
quantlib\src\pricing_engines\engine.rs:1810
<ENGINE>
engine-id: 0
instrument-types: Futures / Bond / VanillaPut
currencies: KRW
underlying-codes: KOSPI2

(Engine::calculate -> theta calculation)
There are instruments whose maturity is within the evaluation_date + theta_day (= 2024-06-21 16:30:00.0 +09:00:00) 

The instruments are as follows:
KOSPI2 Fut Mar21 (165XXX1): 2024-06-14 0:00:00.0 +09:00:00

For the theta calculation for the above instruments, 
the evaluation date is bumped to 2024-06-14 0:00:00.0 +09:00:00 which is the shortest maturity of the above instruments. 
Note that the theta calculation period may be too small to get accurate theta.

[2m2024-06-05T11:56:56.598973+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T11:56:56.5992916+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T11:56:56.5995582+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 304.7929ms
[2m2024-06-05T12:28:52.6264476+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T12:28:52.6271114+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:28:52.6273872+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:28:52.6281936+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:28:52.6282593+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:28:52.6286114+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T12:28:52.6286738+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:28:52.6289027+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:28:52.629132+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 288.1815ms
[2m2024-06-05T12:29:30.897381+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T12:29:30.8982147+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:30.8986839+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:30.9002851+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:30.9004203+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:30.9010336+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T12:29:30.9011156+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:30.9014753+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:30.9018576+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 252.3777ms
[2m2024-06-05T12:29:46.8116103+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T12:29:46.8124315+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:46.8128773+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:46.8141847+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:46.8143197+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:46.8149333+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T12:29:46.8150291+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:29:46.8154172+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:29:46.8158122+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 264.0805ms
[2m2024-06-05T12:30:01.7290701+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T12:30:01.7299625+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:01.7304994+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:01.7309206+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:01.7310687+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:01.7317528+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T12:30:01.7318106+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:01.7322522+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:01.7326758+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 253.3204ms
[2m2024-06-05T12:30:14.9295265+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T12:30:14.9301093+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:14.9305516+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:14.9306789+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:14.9307348+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:14.9312104+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T12:30:14.931261+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T12:30:14.9316256+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T12:30:14.932008+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 259.8115ms
[2m2024-06-05T14:18:17.1963698+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:18:17.197136+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:18:17.1974914+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:18:17.1981748+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:18:17.198553+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:18:17.1988775+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:18:17.218555+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 317.8522ms
[2m2024-06-05T14:19:45.3708976+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:19:45.3716849+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:19:45.372083+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:19:45.3737011+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:19:45.3742385+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:19:45.3746935+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:19:45.4028471+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 351.6902ms
[2m2024-06-05T14:23:17.7182604+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:23:17.718886+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:17.719247+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:17.7204166+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:23:17.7207155+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:23:17.7209924+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:17.74048+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 282.2869ms
[2m2024-06-05T14:23:57.413061+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:23:57.4136131+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:57.4141501+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:57.4155528+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:23:57.4158471+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:23:57.4161566+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:23:57.4371493+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 304.723ms
[2m2024-06-05T14:24:21.8838572+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:24:21.8845847+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:24:21.8849154+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:24:21.8863416+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:24:21.8866649+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:24:21.8869992+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:24:21.8873275+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 247.9878ms
[2m2024-06-05T14:25:07.0021559+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:25:07.0029403+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:07.0034292+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:07.0054024+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:25:07.0058679+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:25:07.0062657+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:07.0067295+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 244.8945ms
[2m2024-06-05T14:25:49.3711166+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:25:49.371932+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:49.3724226+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:49.3744278+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:25:49.374877+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:25:49.3753081+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:25:49.3757602+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 276.3872ms
[2m2024-06-05T14:27:11.5705618+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:27:11.5714399+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:27:11.5717863+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:27:11.5732086+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:27:11.573562+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:27:11.5739407+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:27:11.5743061+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 256.438ms
[2m2024-06-05T14:29:16.2713586+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:29:16.2721974+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:29:16.2726351+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:29:16.2744659+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KRxxxxxxxxxx (Bond) has a cashflow: 0.015 at 2024-07-01 16:30:00.0 +09:00:00

[2m2024-06-05T14:29:16.2752897+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:29:16.2761082+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:29:16.2767293+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 226.1899ms
[2m2024-06-05T14:32:29.891552+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:32:29.892282+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:32:29.8926518+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:32:29.8938009+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:32:29.8942133+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:32:29.894733+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:32:29.8950742+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:32:29.8955101+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:32:29.8958718+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 280.3517ms
[2m2024-06-05T14:42:00.1685486+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:42:00.169213+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:42:00.1695266+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:42:00.1705436+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:42:00.1709154+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:42:00.1714606+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:42:00.1717588+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:42:00.17214+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:43:49.7832012+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:43:49.7839395+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:43:49.7843548+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:43:49.7859462+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:43:49.7864167+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:43:49.7870865+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:43:49.7875563+09:00[0m [34mDEBUG[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:43:49.7880098+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:43:49.788396+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 248.1864ms
[2m2024-06-05T14:44:37.2994533+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:44:37.3000644+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.3003608+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.3007958+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:44:37.3011684+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.4398674+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:44:37.4404028+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.440826+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.4423301+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:44:37.4427847+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:44:37.4432471+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:44:37.4436487+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:44:37.4440958+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 241.9425ms
[2m2024-06-05T14:47:03.1196438+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:47:03.1204397+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1208874+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1212844+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1217074+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:47:03.1222034+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1226877+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1233183+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.1236582+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.145528+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T14:47:03.1746337+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:47:03.1919736+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.07s)
[2m2024-06-05T14:47:03.2136939+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:47:03.2180172+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:47:03.2183994+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.2186964+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.2190277+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.220658+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:47:03.2210954+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:47:03.2215469+09:00[0m [34mDEBUG[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:47:03.221942+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.2225428+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.222924+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.2232364+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:03.237981+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:47:03.2636319+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:47:03.2785638+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:47:03.2982213+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:47:03.2987767+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 287.6118ms
[2m2024-06-05T14:47:38.1713378+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:47:38.1719208+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1722826+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1728324+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1734764+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1737665+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1742082+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1744875+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.1942909+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:47:38.228031+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.06s)
[2m2024-06-05T14:47:38.2518302+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:47:38.274601+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.10s)
[2m2024-06-05T14:47:38.283582+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:47:38.284103+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.2844689+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.2847828+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.2851372+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.285757+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.2860931+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.2863688+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:47:38.3061872+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:47:38.3322775+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:47:38.3555164+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-06-05T14:47:38.3788789+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:47:38.3793629+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 306.3262ms
[2m2024-06-05T14:50:00.0452459+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 0 launched
[2m2024-06-05T14:50:00.0452463+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 1 launched
[2m2024-06-05T14:50:00.0932306+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:50:00.0939284+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.094233+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.0946148+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.0949929+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.095273+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.0957635+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.0959904+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.1108356+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:50:00.1391943+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:50:00.1546458+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.06s)
[2m2024-06-05T14:50:00.17133+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:50:00.2247277+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:50:00.2252362+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.2257521+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.2264144+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.227202+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.227743+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.2281428+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.2283784+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:50:00.2446839+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:50:00.2683249+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-06-05T14:50:00.2823571+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:50:00.3015699+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:50:00.3023551+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 301.1969ms
[2m2024-06-05T14:53:10.2645036+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 0 launched
[2m2024-06-05T14:53:10.2645056+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 1 launched
[2m2024-06-05T14:53:10.3291295+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:53:10.3297936+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3301849+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3305215+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3310859+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.331408+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3319315+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3322423+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:10.3498737+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:53:10.3834708+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:53:10.4064144+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:53:10.4263586+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.10s)
[2m2024-06-05T14:53:12.4301379+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:53:12.4306599+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4312382+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4316249+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4320356+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4326335+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4338973+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4343038+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:12.4500015+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:53:12.4815136+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:53:12.4945401+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:53:12.5157257+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:53:12.5165525+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 2.291397s
[2m2024-06-05T14:53:29.0056587+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 1 launched
[2m2024-06-05T14:53:29.0056724+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m engine thread 0 launched
[2m2024-06-05T14:53:29.0555053+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:53:29.0561202+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0564516+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0567624+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0572166+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0575408+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0581008+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0584656+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:29.0740378+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:53:29.1002674+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.04s)
[2m2024-06-05T14:53:29.118847+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.06s)
[2m2024-06-05T14:53:29.13762+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:53:30.1813674+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:53:30.1818139+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1820681+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1823473+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1826505+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1831856+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1835044+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1837194+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:53:30.1973158+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:53:30.2195661+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-06-05T14:53:30.2347559+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.05s)
[2m2024-06-05T14:53:30.260793+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.08s)
[2m2024-06-05T14:53:30.2612709+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 1.3039605s
[2m2024-06-05T14:55:17.1477669+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:55:17.1481801+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m launching engine 1 finished. The calculation starts...
[2m2024-06-05T14:55:17.1487292+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1489592+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1492224+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1495723+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.149803+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1501761+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1504137+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.1652519+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:55:17.1968288+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:55:17.2099745+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:55:17.224205+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.08s)
[2m2024-06-05T14:55:17.2338596+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:55:17.234185+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m launching engine 0 finished. The calculation starts...
[2m2024-06-05T14:55:17.2345622+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2348846+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2351968+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2355426+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2359395+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2362788+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.236551+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:55:17.2499258+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:55:17.2820217+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:55:17.2981085+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.06s)
[2m2024-06-05T14:55:17.322464+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:55:17.3230864+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 272.6114ms
[2m2024-06-05T14:56:23.1623338+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:56:23.1628932+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m launching engine 1 finished. The calculation starts...
[2m2024-06-05T14:56:23.1634299+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.1638317+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.164699+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.1653363+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.1656643+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.166279+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.1665967+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.1818533+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:56:23.220432+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.04s whole time elapsed: 0.06s)
[2m2024-06-05T14:56:23.2339498+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.07s)
[2m2024-06-05T14:56:23.2507125+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:56:23.2774621+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:56:23.2779023+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine_generator[0m[2m:[0m launching engine 0 finished. The calculation starts...
[2m2024-06-05T14:56:23.3788178+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3792666+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3797801+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3802396+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3808672+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3813806+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.3817541+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:56:23.4084164+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.03s)
[2m2024-06-05T14:56:23.446331+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.04s whole time elapsed: 0.07s)
[2m2024-06-05T14:56:23.464295+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T14:56:23.4831804+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.10s)
[2m2024-06-05T14:56:23.4836614+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 427.9554ms
[2m2024-06-05T14:59:09.0882352+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:59:09.0889235+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.0892781+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.0895996+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.0900453+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.090364+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.0909226+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.0912829+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.1063172+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:59:09.1353936+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:59:09.150037+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:59:09.1668162+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:59:09.2312592+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:59:09.2317987+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2321795+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2326793+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2331258+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2336505+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2340858+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.2346873+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:09.248094+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.02s)
[2m2024-06-05T14:59:09.2692318+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.04s)
[2m2024-06-05T14:59:09.2829884+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.05s)
[2m2024-06-05T14:59:09.3040354+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-06-05T14:59:09.3046368+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 301.2093ms
[2m2024-06-05T14:59:45.5742256+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T14:59:45.5748359+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.5754184+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.5758641+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.5763848+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T14:59:45.5768429+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.5773902+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.5779527+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.578354+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.594894+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T14:59:45.6252699+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T14:59:45.6391069+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.06s)
[2m2024-06-05T14:59:45.658943+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T14:59:45.6968377+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T14:59:45.6973676+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.6980775+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.6988279+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T14:59:45.7010635+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:59:45.701779+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:59:45.7023941+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T14:59:45.702904+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T14:59:45.7036801+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T14:59:45.704382+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T14:59:45.7049158+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T14:59:45.7229479+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T14:59:45.7523436+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.06s)
[2m2024-06-05T14:59:45.7661876+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.01s whole time elapsed: 0.07s)
[2m2024-06-05T14:59:45.7928281+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.10s)
[2m2024-06-05T14:59:45.7936383+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 323.5812ms
[2m2024-06-05T16:40:51.0118355+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T16:40:51.0126614+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.013164+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0135456+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0141196+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T16:40:51.0146523+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0151373+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0157328+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0163993+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.0381289+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T16:40:51.0714532+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.03s whole time elapsed: 0.06s)
[2m2024-06-05T16:40:51.0921251+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T16:40:51.1161284+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.10s)
[2m2024-06-05T16:40:51.1608163+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T16:40:51.1617162+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.1624163+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.1629495+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.1646967+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T16:40:51.1652992+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T16:40:51.165929+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T16:40:51.1664995+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T16:40:51.1672085+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T16:40:51.1680963+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T16:40:51.1694465+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T16:40:51.1902339+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T16:40:51.2158913+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.05s)
[2m2024-06-05T16:40:51.2322238+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.07s)
[2m2024-06-05T16:40:51.253483+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.09s)
[2m2024-06-05T16:40:51.2542398+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 343.713ms
[2m2024-06-05T17:20:49.9954097+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T17:20:49.9960466+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9966207+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9971373+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9977007+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T17:20:49.998216+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9986957+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9992894+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:49.9997225+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:50.0175539+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.02s)
[2m2024-06-05T17:20:50.0568819+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.04s whole time elapsed: 0.06s)
[2m2024-06-05T17:20:50.072157+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.01s whole time elapsed: 0.08s)
[2m2024-06-05T17:20:50.0961237+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.10s)
[2m2024-06-05T17:20:50.1331649+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T17:20:50.1336723+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:50.1349121+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:50.1355393+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:20:50.1372637+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:20:50.1378355+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:20:50.1385332+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:20:50.139174+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:20:50.1400493+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:20:50.1408022+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:20:50.1413679+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:20:50.165731+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T17:20:50.1950979+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.06s)
[2m2024-06-05T17:20:50.21855+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T17:20:50.2393444+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.11s)
[2m2024-06-05T17:20:50.2402092+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 351.719ms
[2m2024-06-05T17:27:26.6178385+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 1) set all parameters
[2m2024-06-05T17:27:26.618608+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6190106+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6193552+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6197569+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:27:26.6202228+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m 
### KR103501GCC0 (Bond) has a cashflow: 0.02125 at 2024-06-10 16:30:00.0 +09:00:00

[2m2024-06-05T17:27:26.6205916+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:27:26.6210264+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6215591+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6221206+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6224477+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 1, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6449415+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T17:27:26.6713772+09:00[0m [32m INFO[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * (engine-id: 0) set all parameters
[2m2024-06-05T17:27:26.6719295+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * npv calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.672348+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * fx exposure calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6729643+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6744311+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) is DEDUCTED from dividens by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:27:26.6750255+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:27:26.6756237+09:00[0m [34mDEBUG[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::parameters::market_price[0m[2m:[0m 
KOSPI2 (KOSPI2) div deduction is ROLLED back by 0.008571428 on 2024-06-01 0:00:00.0 +09:00:00

[2m2024-06-05T17:27:26.6761946+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * theta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.6768171+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.00s)
[2m2024-06-05T17:27:26.677515+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:27:26.6782338+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_delta calculation is done (engine id: 0, time = 0.00s whole time elapsed: 0.01s)
[2m2024-06-05T17:27:26.6825379+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 1, time = 0.04s whole time elapsed: 0.06s)
[2m2024-06-05T17:27:26.7032459+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.03s)
[2m2024-06-05T17:27:26.7032778+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T17:27:26.7256376+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m1[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 1, time = 0.02s whole time elapsed: 0.11s)
[2m2024-06-05T17:27:26.7290211+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * rho calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.06s)
[2m2024-06-05T17:27:26.7521658+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * div_structure calculation is done (engine id: 0, time = 0.02s whole time elapsed: 0.08s)
[2m2024-06-05T17:27:26.7833232+09:00[0m [32m INFO[0m [1mcalculate[0m[1m{[0m[3mengine_id[0m[2m=[0m0[1m}[0m[2m:[0m [2mquantlib::pricing_engines::engine[0m[2m:[0m * vega_matrix calculation is done (engine id: 0, time = 0.03s whole time elapsed: 0.11s)
[2m2024-06-05T17:27:26.7839883+09:00[0m [32m INFO[0m [1mmain (engine)[0m[2m:[0m [2mengine_example[0m[2m:[0m engine example finished 362.2332ms
